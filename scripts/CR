#!/usr/bin/env python
import sys
import os


class COLORS:

	FG_BLACK = '\033[30m'
	FG_RED = '\033[31m'
	FG_GREEN = '\033[32m'
	FG_YELLOW = '\033[33m'
	FG_BLUE = '\033[34m'
	FG_MAGENTA = '\033[35m'
	FG_CYAN = '\033[36m'
	FG_WHITE = '\033[37m'

	BG_BLACK = '\033[40m'
	BG_RED = '\033[41m'
	BG_GREEN = '\033[42m'
	BG_YELLOW = '\033[43m'
	BG_BLUE = '\033[44m'
	BG_MAGENTA = '\033[45m'
	BG_CYAN = '\033[46m'
	BG_WHITE = '\033[47m'

	FG_LIGHT_BLACK = '\033[90m'
	FG_LIGHT_RED = '\033[91m'
	FG_LIGHT_GREEN = '\033[92m'
	FG_LIGHT_YELLOW = '\033[93m'
	FG_LIGHT_BLUE = '\033[94m'
	FG_LIGHT_MAGENTA = '\033[95m'
	FG_LIGHT_CYAN = '\033[96m'
	FG_LIGHT_WHITE = '\033[97m'

	BG_LIGHT_BLACK = '\033[100m'
	BG_LIGHT_RED = '\033[101m'
	BG_LIGHT_GREEN = '\033[102m'
	BG_LIGHT_YELLOW = '\033[103m'
	BG_LIGHT_BLUE = '\033[104m'
	BG_LIGHT_MAGENTA = '\033[105m'
	BG_LIGHT_CYAN = '\033[106m'
	BG_LIGHT_WHITE = '\033[107m'

	RESET = '\033[0m'


# command CR 'base' 'target' 'source/s'
def main():
	num = len(sys.argv)

	if num < 4:
		print(
		    f"{COLORS.FG_RED}At least 3 arguments needed. {num} provided.{COLORS.RESET}"
		)
		quit(1)

	base_filename = sys.argv[1]
	target_filename = sys.argv[2]
	source_filenames = sys.argv[3:]

	components_names: list[str] = []
	components_bodies: list[str] = []

	for comp_filename in source_filenames:
		components_names.append(
		    os.path.basename(os.path.splitext(comp_filename)[0])
		)
		with open(comp_filename) as component:
			components_bodies.append(component.read())

	target_file: str
	with open(base_filename) as base:
		target_file = base.read()

	new_file: str
	for i in range(len(components_names)):
		comp_target_name_comp = "<" + components_names[i] + "/>"
		comp_target_name_long = "<" + components_names[i] + " />"
		new_file = target_file.replace(
		    comp_target_name_comp, components_bodies[i]
		)
		new_file = target_file.replace(
		    comp_target_name_long, components_bodies[i]
		)
		target_file = new_file

	with open(target_filename, "w+") as f:
		f.write(new_file)


if __name__ == "__main__":
	main()
